GLOBAL TODO: + Объединить функции поиска дублирующих маркировок и подсчета 
               циклов для главного процесса и для дополнительных
             + сортировать "разрешенные" задачи по вероятности запуска.

Build: 49 (08.06.2002) *LAST* 
+ добавил в CPetriNet поддержку ресурсов-процессов
+ добавил в CFileLOG запись имен процессов вместо записи идентификаторов

Build: 48 (04.05.2002) *STABLE*
+ добавил вывод причины, почему была закрыта ветвь (время, или ошибка 
  при вычислении) в режиме отладки
\ исправил глюк в командной строке - не правильно считывались вероятности,
  заданные в процентах (в ф-ции sscanf использовалось "%f" вместо "%lf", для
  чтения данных типа double)
\ исправил накрасивость при записи нескольких мэппингов в лог-файл

Build: 47 (30.05.2002)
\ исправлен глюк в Петри процессоре: если число процессов было равно нулю
  (т.е. был только один MAIN PROCESS) не работал ключ '/s', ошибка была в
  CPetriNet::GetMinNumOfCycles(). Т.е. не считалось минимальное число циклов 
  для главного процесса.

Build: 46 (29.05.2002)
\ исправлен небольшой глюк с памятью при сохранении протокола в 
  CFileLOG::GetTextProtocol(), CFileLOG::GetTextInfo() который появился после 
  разделения протокола имитации и ресурсов.

Build: 45 (29.05.2002)
+ изменил ф-цию проверки полученного времени на оптимальность 
  CMapGen::IsMappingOptimal(...). Теперь она вычисляет сумму квадратов времен
  циклов процессов, и выбирается размещение у кого эта сумма меньше.

Build: 44 (28.05.2002)
- удалил подсчет числа ПМ в ф-ции вычисления CMapGen::GetMapIDByMapping(...)
\ исправил глюк: если не было найдено решений (размещений) пустое решение 
  (размещение) добавлялось в подтвержденные размещения

Build: 43 (28.05.2002)
+ сделал поддержку хранения нескольких размещение для разного числа сбойных ПМ
- убрал глюк из CMapGen: не вызывалась функция InitResources()
\ разделить в Петри процессоре запись истории и данных о сети. Сделал
  поддержку ресурсов CPetriNet::tagLOGRSRC (28.05.2002) в классах CPetriNet,
  CMapGen и CFileLOG

Build: 42 (28.05.2002)
+ добавить сохранение в ЛОГ-файл размещение процессов в CFileLog
\ исправил ф-цию CFileMPN::Shutdown()
\ исправил глюк с удалением уже удаленного списка ПМ в в CFileMPN. Ошибка была
  в CMapGen::GO01GlobalCheckProcesse (после удаления списка ПМ, число ПМ не 
  обнулялось)

Build: 41 (27.05.2002)
+ сделал возможной генерацию нескольких размещений для разного количества
  сбойных модулей в CMapGen
+ сделал в ЛОГ-файле (CFileLOG)разделенную генерацию для протокола, статистики 
  и размещения
+ сделал провеку текущго размещения на дублирование (с помощью Magic Num, 
  числа ПМ и числа задач (не процессов))
\ исправил глюк с незакрытыми ветвями при дублированном размещении

Build: 40 (26.05.2002)
+ добавил новый поиск с увеличенным числом процессоров, если не удалось найти
  оптимального размещения
\ изменил вероятность при чтении файлов формата TPN01e со 100% до 99%, что 
  сделает возможным запуск альтернативных ветвей

Build: 39 (26.05.2002)
+ первая рабочая версия Mapping Generator'a

Build: 38 (25.05.2002)
+ добавил шаги ГО: 9, 10, 11, 12, 13, 14

Build: 37 (24.05.2002)
+ добавил шаги ГО: 5, 7, 8
+ добавил ф-цию рассчета времени для заданного размещения

Build: 36 (23.05.2002)
+ добавил в MapGen структуру узла и листа
+ ввел шаги алгоритма ГлобОпт 3 и 6.
- удалил ключ '/s' без параметров

Build: 35 (22.05.2002)
+ добавил ф-цию поиска максимального числа отказавших ПМ

Build: 34 (22.05.2002)
+ добавил функцию поиска максимального используемого числа ПМ при наилучших
  условиях
+ добавил математические ф-ции

Build: 33 (22.05.2002)
\ изменил названия TPN-файлов в MPN-файлы, Modelled Petri Network (MPN)

Build: 32 (22.05.2002) *STABLE*
+ если ф-ции Run(...) задано минимальное число циклов для выполнения, 
  то эта ф-ция выполняет циклы до тех пор, пока все процессы не выполнят это 
  число циклов (или больше), (включая главный процесс, если в нем есть циклы),
  если заданное число циклов, так и не выполнено за ограниченное число 
  итераций, то ф-ция Run(...) оставнавливается.

Build: 31 (21.05.2002)
+ добавлена проверка на совпадающие идентификаторы (ID) при создании новой сети
+ добавил посик стагнаций для процессов (PRIsInStagnation(...))
\ исправил ошибку подсчета времени цикла процесса

Build: 30 (20.05.2002)
+ добавлен подсчет простоев процессоров (стагнаций)
+ сделать ф-цию стат. обработки анализированных маркировок
+ сделал анализ маркировок для процессов
\ теперь считается максимальное число выполненных циклов по начальной 
  маркировке цикла, а не число циклов, соответствующее полученное по последней 
  маркироке
\ исправлен глюк при подсчете циклов и нахождении ДУБ и ПЕРЕКР маркировок:
  нельзя считать маркировку ДУБлирующей во время стагнации, и следовательно
  нельзя считать число начальных маркировок цикла по маркировкам во время 
  стагнации !!!      

Build: 29 (19.05.2002)
+ добавил поддержку маркировок для процессов
+ Добавил функции работы со статистикой (Init, Update, Reset)
+ разделил в две разные структуры историю (протокол) и статистику
+ сделал динамическое выделение памяти для хранения текстового отчета
  в класса CLOGFile, ф-ция SaveProtocolTXT(...)
\ увеличил размер поля имени любого элемента с 8 до 16 байт.
\ изменил формат записи о процессорном модуле в файле TPNT02d: число задач,
  которые может выполнять данный ПМ вычисляется автоматически (по запятым)

Build: 28 (18.05.2002)
+ добавлен подсчет числа ПМ, которые работают одновременно

Build: 27 (17.05.2002)
\ исправлен подсчет времени одного цикла (считалось на одну итерацию меньше)

Build: 26 (17.05.2002)
\ исправлен подсчет циклов (считалось на одни меньше, чем было исполнено)
+ добавлен подсчет времени цикла (если тцикл есть) всей сети (есть ошибка)

Build: 25 (16.05.2002)
+ добавлен подсчет циклов для основного процесса
\ изменен лог-файл: добавлено число выполненных циклов, и число процессов

Build: 24 (16.05.2002)
+ изменен формат TPNT02d файла. Теперь в файле можно хранить список процессов,
  который состоит из переходов и позиций. Процессов может быть несколько.
+ в файле TPNT02d можно хранить комментарии, начинающиеся с символа ";" 
  (точка с запятой), но только после 5-той строки

Build: 23 (10.05.2002) *STABLE*
\ исправлен глюк в формате TPNT02d файла. Теперь при перечислении процессоров в
  качестве текущей задачи надо указывать имя перехода, а не его идентификатор,
  который в общем случае не известен.

Build: 22 (10.05.2002)
+ добавил ф-цию очистки протокола ResetHistory()
+ добавил ф-цию подготовки сети к перезапуску Restart()
+ добавил ф-цию закрытия сети Shutdown()
\ изменил алгорит ф-ции Run() т.о., что теперь невозможно запустить снова сеть
  после достижения терминальной маркировки, для этого надо сначала подготовить  
  сеть к перезапуску, а потом уже запускать. Но если выполнение сети было 
  остановленно по достижению маркировок ДУБ или ПЕРКРЫВ, то выполнение сети 
  может быть продолженно.
\ изменен алгоритм поиска ПЕРКЕКРЫВающихся маркировок

Build: 21 (09.05.2002)
+ добавил запись двоичного лога. Но все текстовые поля в файле выравнены по 
  границе в 8 байт.

Build: 20 (09.05.2002)
+ добавил в текстовый файл отчет число переходов  
+ добавил пометку ТЕРМинальных маркировок в протокол
+ сделал отмену ДУБ и ПЕРЕКРЫВ при нулевых маркировках, потом удалил,
  т.к. нулевая маркировка - это тоже маркировка, хотя возможно терминальная
\ переделал формат структуры для хранения истории-протокола изменения 
  маркировок и состояний процессоров
\ изменил алгоритм сравнения маркировок: теперь маркировки сравниваются
  только при свободном состоянии процессоров
- удалил функцию поиска ПЕРЕКРЫВ маркировок и объединил ее с функцией
  поиска ДУБ маркировок

Build: 19 (09.05.2002)
+ изменени алгоритм поиска процессора по идентификатору (ID) задачи. Теперь по
  заданному ID функция выдает список всех доступных процессоров для данной 
  задачи, а не только первый попавшийся

Build: 18 (08.05.2002)
- убран глюк при определении стагнации: стагнация наступала при одинаковых 
  маркировках и свободных процессорах сразу после срабатывания, и не 
  проверялось, грузится ли следующая задача в процессор или нет, теперь это
  проверяется, и если новая задача грузится, то стагнация не наступает

Build: 17 (08.05.2002)
+ при поиске в протоколе ДУБ и ПЕРЕКРЫВ маркировок добавлен алгоритм 
  определения стагнации, т.е. в данный момент все процессоры свободны
  и маркировки на разных итерациях оказываются ДУБ или ПЕРКРЫВ, но эти 
  маркировки не являются терминальными, следовательно такие маркировки нельзя
  считать ДУБ или ПЕРЕКРЫВ
- убран глюк при чтении нового формата файла TPNT02d

Build: 16 (08.05.2002)
- изменен формат файла TPNT02d, убраны поля, указывающие кол-во МЕСТ,
  ПЕРЕХОДов, СОЕДИНЕНИЙ и ПРОЦЕССОРОВ. Теперь список процессоров не обязателен,
  и при его отсутствии он будет автоматически сгенерирован в расчете один
  процессор (ПМ) на одну задачу (Переход)
